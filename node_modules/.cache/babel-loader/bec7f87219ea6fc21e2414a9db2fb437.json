{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\smits\\\\eth_swap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\smits\\\\eth_swap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\smits\\\\eth_swap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\smits\\\\eth_swap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\smits\\\\eth_swap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\smits\\\\eth_swap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\smits\\\\eth_swap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\smits\\\\eth_swap\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport Token from '../abis/Token.json';\nimport EthSwap from '../abis/EthSwap.json';\nimport Navbar from './Navbar';\nimport Main from './Main';\nimport logo from '../logo.png';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var web3, accounts, ethBalance, networkId, tokenData, token, tokenBalance, ethSwapData, ethSwap;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = window.web3;\n                _context2.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context2.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context2.next = 7;\n                return web3.eth.getBalance(this.state.account);\n\n              case 7:\n                ethBalance = _context2.sent;\n                this.setState({\n                  ethBalance: ethBalance\n                }); //Load Token\n\n                _context2.next = 11;\n                return web3.eth.net.getId();\n\n              case 11:\n                networkId = _context2.sent;\n                tokenData = Token.networks[networkId];\n\n                if (!tokenData) {\n                  _context2.next = 22;\n                  break;\n                }\n\n                token = new web3.eth.Contract(Token.abi, tokenData.address);\n                this.setState({\n                  token: token\n                });\n                _context2.next = 18;\n                return token.methods.balanceOf(this.state.account).call();\n\n              case 18:\n                tokenBalance = _context2.sent;\n                this.setState({\n                  tokenBalance: tokenBalance\n                });\n                _context2.next = 23;\n                break;\n\n              case 22:\n                window.alert('Token contract not deployed to detected network.');\n\n              case 23:\n                //Load EthSwap\n                ethSwapData = EthSwap.networks[networkId];\n\n                if (ethSwapData) {\n                  ethSwap = new web3.eth.Contract(EthSwap.abi, ethSwapData.address);\n                  this.setState({\n                    ethSwap: ethSwap\n                  });\n                } else {\n                  window.alert('EthSwap contract not deployed to detected network.');\n                }\n\n                this.setState({\n                  loading: false\n                });\n\n              case 26:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context3.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '',\n      token: {},\n      ethSwap: {},\n      ethBalance: '0',\n      tokenBalance: '0',\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var content;\n\n      if (this.state.loading) {\n        content = React.createElement(\"p\", {\n          id: \"loader\",\n          className: \"text-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        content = React.createElement(Main, {\n          ethBs: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        account: this.state.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex ml-auto mr-auto\",\n        style: {\n          maxWidth: '600px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://www.dappuniversity.com/bootcamp\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), content)))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\smits\\eth_swap\\src\\components\\App.js"],"names":["React","Component","Web3","Token","EthSwap","Navbar","Main","logo","App","loadWeb3","loadBlockchainData","web3","window","eth","getAccounts","accounts","setState","account","getBalance","state","ethBalance","net","getId","networkId","tokenData","networks","token","Contract","abi","address","methods","balanceOf","call","tokenBalance","alert","ethSwapData","ethSwap","loading","ethereum","enable","currentProvider","props","content","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Web3 from 'web3'\r\nimport Token from '../abis/Token.json'\r\nimport EthSwap from '../abis/EthSwap.json'\r\nimport Navbar from './Navbar'\r\nimport Main from './Main'\r\nimport logo from '../logo.png';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    await this.loadBlockchainData()\r\n  }\r\n\r\n  async loadBlockchainData() {\r\n    const web3 = window.web3\r\n\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({ account: accounts[0]})\r\n    \r\n    const ethBalance = await web3.eth.getBalance(this.state.account)\r\n    this.setState({ ethBalance })\r\n\r\n    //Load Token\r\n    const networkId = await web3.eth.net.getId()\r\n    const tokenData = Token.networks[networkId]\r\n    if(tokenData){\r\n      const token = new web3.eth.Contract(Token.abi, tokenData.address)\r\n      this.setState({ token })\r\n      let tokenBalance = await token.methods.balanceOf(this.state.account).call()\r\n      this.setState({ tokenBalance: tokenBalance})\r\n    }\r\n    else {\r\n      window.alert('Token contract not deployed to detected network.')\r\n    }\r\n\r\n    //Load EthSwap\r\n    const ethSwapData = EthSwap.networks[networkId]\r\n    if(ethSwapData){\r\n      const ethSwap = new web3.eth.Contract(EthSwap.abi, ethSwapData.address)\r\n      this.setState({ ethSwap })\r\n    }\r\n    else {\r\n      window.alert('EthSwap contract not deployed to detected network.')\r\n    }\r\n\r\n    this.setState({ loading: false})\r\n  }\r\n\r\n  async loadWeb3() {\r\n    if (window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n    else if (window.web3) {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else {\r\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n    }\r\n\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      account: '',\r\n      token: {},\r\n      ethSwap: {},\r\n      ethBalance: '0',\r\n      tokenBalance: '0',\r\n      loading: true\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let content\r\n\r\n    if(this.state.loading){\r\n       content = <p id=\"loader\" className=\"text-center\">Loading...</p>\r\n    } else {\r\n      content = <Main ethBs/>\r\n    }\r\n    return (\r\n      <div>\r\n        <Navbar account={this.state.account}/>\r\n          \r\n        <div className=\"container-fluid mt-5\">\r\n          <div className=\"row\">\r\n            <main role=\"main\" className=\"col-lg-12 d-flex ml-auto mr-auto\" style={{ maxWidth: '600px' }}>\r\n              <div className=\"content mr-auto ml-auto\">\r\n                <a\r\n                  href=\"http://www.dappuniversity.com/bootcamp\"\r\n                  target=\"_blank\"\r\n                  rel=\"noopener noreferrer\"\r\n                >\r\n                </a>\r\n                {content}\r\n              </div>\r\n            </main>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}